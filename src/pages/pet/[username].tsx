import dayjs from "dayjs";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { useSnackbar } from "notistack";
import { ReactElement, useContext, useEffect, useState, Fragment } from "react";

import { IMAGE_TYPE } from "@/components/forms/formUserMoreInfo";
import { AuthContext } from "@/contexts/AuthContext";
import { IUser } from "@/contexts/UserSignupContext";
import { findAllBreedsByCategory, IPetBreed } from "@/services/petBreedService";
import {
  findAllPetCategories,
  IPetCategory,
} from "@/services/petCategoryService";
import { findPetByUsername, IPet } from "@/services/petService";
import { followPet } from "@/services/userService";
import {
  findUserById,
  getUserFollows,
  getUserPets,
} from "@/services/userService";
import { PhotoCamera } from "@mui/icons-material";
import AddCircleOutlineIcon from "@mui/icons-material/AddCircleOutline";
import ChatBubbleOutlineIcon from "@mui/icons-material/ChatBubbleOutline";
import ChatBubbleRoundedIcon from "@mui/icons-material/ChatBubbleRounded";
import DeleteIcon from "@mui/icons-material/Delete";
import FavoriteIcon from "@mui/icons-material/Favorite";
import FavoriteBorderIcon from "@mui/icons-material/FavoriteBorder";
import MoreHorizIcon from "@mui/icons-material/MoreHoriz";
import {
  Avatar,
  Box,
  Button,
  FormControl,
  IconButton,
  InputLabel,
  List,
  ListItem,
  MenuItem,
  Modal,
  Select,
  TextField,
  Typography,
} from "@mui/material";
import { DatePicker, LocalizationProvider } from "@mui/x-date-pickers";
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";

export default function Dashboard(): ReactElement {
  const { user, setUser } = useContext(AuthContext);
  const [pet, setPet] = useState<IPet | null>();
  const router = useRouter();
  const { username } = router.query;

  const handleFollow = async () => {
    if (user && pet?.id) {
      const test = await followPet(user?.sub, pet?.id);
      console.log(test);
    }
  };

  useEffect(() => {
    (async (): Promise<void> => {
      if (user && username) {
        const pet = await findPetByUsername(username as string);

        if (pet) {
          setPet(pet);
        }
        console.log("PET from back", pet);
      }
    })();
  }, [user, username]);

  return (
    <>
      <Head>
        <title>{user?.name}&apos;s profile</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex p-0 justify-center relative">
        <div className="bg-primary w-1/4 -z-10 h-full absolute top-0 left-0"></div>
        <div className="container xl:max-w-screen-xl p-0 flex">
          <div className="flex flex-col h-full items-start pr-20 w-[85%] bg-primary text-white">
            <>
              <div className="py-2">
                <Avatar
                  className="mx-auto object-contain border-2 border-white"
                  alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                  src={
                    user?.avatar &&
                    `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                  }
                  sx={{
                    width: 120,
                    height: 120,
                    fontSize: 120,
                    objectFit: "contain",
                  }}
                />
                <Typography variant="h4" className="text-center font-bold">
                  {user?.name}
                </Typography>
                <Typography variant="h6" className="text-center font-bold">
                  @{user?.username}
                </Typography>
                <Typography variant="h6" className="text-center font-bold">
                  Guardian: fulano
                </Typography>
                <Typography variant="h6" className="text-center font-bold">
                  Following: {user?.follows?.length}
                </Typography>
                <Typography variant="h6" className="text-center font-bold">
                  Followers: {user?.follows?.length}
                </Typography>
              </div>
              {/* <List
                className="flex flex-wrap justify-start items-start"
                disablePadding={true}
              >
                {user &&
                  user.pets &&
                  user.pets.map((pet, index) => (
                    <Fragment key={pet.id}>
                      {(index === 0 ||
                        pet.Category?.id !=
                          user?.pets[index - 1].Category?.id) && (
                        <ListItem className="m-0 p-0">
                          <Typography
                            variant="h5"
                            className="capitalize"
                            key={pet.Category?.id}
                          >
                            {pet.Category?.name}
                          </Typography>
                        </ListItem>
                      )}
                      <ListItem className="w-fit p-1">
                        <Link href={`/pet/${pet.username}`}>
                          <Avatar
                            className="object-contain border-2 border-white"
                            alt={
                              pet?.name ? `${pet.name}'s avatar` : "User avatar"
                            }
                            src={
                              pet?.avatar &&
                              `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${pet?.avatar}`
                            }
                            sx={{
                              width: 70,
                              height: 70,
                              fontSize: 70,
                              objectFit: "contain",
                              cursor: "pointer",
                            }}
                          />
                          <Typography variant="h6" className="text-center">
                            {pet.name}
                          </Typography>
                        </Link>
                      </ListItem>
                    </Fragment>
                  ))}
              </List> */}
            </>
            {/* <Modal
              open={openCreatePet}
              onClose={handleClose}
              aria-labelledby="modal-modal-title"
              aria-describedby="modal-modal-description"
            >
              <Box
                component="form"
                sx={{
                  "& .MuiTextField-root": {
                    m: 1,
                    width: "25ch",
                  },
                }}
                noValidate
                autoComplete="off"
                className="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 bg-white rounded-md p-8 flex-row items-center"
              >
                <div className="relative w-fit mx-auto">
                  <label htmlFor="inputFile">
                    <Avatar
                      className="object-contain border border-orange-400"
                      alt={pet?.name ? `${pet.name}'s avatar` : "User avatar"}
                      src={pet?.avatar}
                      sx={{
                        width: 180,
                        height: 180,
                        fontSize: 120,
                        objectFit: "contain",
                        cursor: "pointer",
                      }}
                    />
                  </label>
                  <IconButton
                    className="absolute start-0 bottom-0"
                    color="primary"
                    aria-label="upload avatar"
                    component="label"
                  >
                    <input
                      hidden
                      id="inputFile"
                      name="inputFile"
                      accept="image/*"
                      type="file"
                      onChange={(e): void => {
                        fileHandler(e);
                        e.target.value = "";
                      }}
                    />
                    <PhotoCamera sx={{ fontSize: 32 }} />
                  </IconButton>
                  <IconButton
                    className="absolute end-0 bottom-0"
                    color="primary"
                    aria-label="delete avatar"
                    component="label"
                    onClick={(): void => {
                      setPet({ ...pet, avatar: "" });
                      setFile(null);
                    }}
                  >
                    <DeleteIcon sx={{ fontSize: 32 }} />
                  </IconButton>
                </div>
                <TextField
                  required
                  type="text"
                  label="Pet's name"
                  placeholder="Pet's name"
                  value={pet?.username && pet.username}
                  onChange={(e): void =>
                    setPet({ ...pet, username: e.target.value })
                  }
                />
                <TextField
                  required
                  type="text"
                  label="Username"
                  placeholder="Pet's username"
                  value={pet?.name && pet.name}
                  onChange={(e): void =>
                    setPet({ ...pet, name: e.target.value })
                  }
                />

                <FormControl required sx={{ m: 1, minWidth: 120 }}>
                  <InputLabel id="demo-simple-select-required-label">
                    Category
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-required-label"
                    id="demo-simple-select-required"
                    label="Category *"
                    disabled={petCategories.length < 1}
                    value={pet.categoryId || ""}
                    onChange={(e): void => {
                      setPetBreeds([]);
                      setPet({
                        ...pet,
                        categoryId: e.target.value,
                        breedId: "",
                      });
                    }}
                  >
                    {petCategories.map((petCategory) => (
                      <MenuItem key={petCategory.id} value={petCategory.id}>
                        {petCategory.name}
                      </MenuItem>
                    ))}
                  </Select>
                </FormControl>

                <FormControl required sx={{ m: 1, minWidth: 120 }}>
                  <InputLabel id="demo-simple-select-required-label">
                    Breed
                  </InputLabel>
                  <Select
                    labelId="demo-simple-select-required-label"
                    id="demo-simple-select-required"
                    label="Category *"
                    disabled={petBreeds.length < 1}
                    value={pet.breedId || ""}
                    onChange={(e): void =>
                      setPet({ ...pet, breedId: e.target.value })
                    }
                  >
                    {petBreeds.map((petBreed) => (
                      <MenuItem key={petBreed.id} value={petBreed.id}>
                        {petBreed.name}
                      </MenuItem>
                    ))}
                  </Select>
                </FormControl>

                <LocalizationProvider dateAdapter={AdapterDayjs}>
                  <DatePicker
                    label="Pet's birthday"
                    format="DD/MM/YYYY"
                    onChange={(birthdate): void => {
                      setPet({
                        ...pet,
                        birthdate: dayjs(birthdate as string).toString(),
                      });
                      console.log("PET AGE", pet.birthdate);
                    }}
                  />
                </LocalizationProvider>

                <Button onClick={handleAddPet} sx={{ mr: 1 }}>
                  Sign up
                </Button>
              </Box>
            </Modal> */}
          </div>
          <List className="flex-auto w-[160%] h-max">
            <ListItem className="flex px-2 py-3 mb-3 items-start -translate-x-[2.3rem] bg-white border-2 border-primary rounded-3xl">
              <Avatar
                className="object-contain border border-orange-400"
                alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                src={
                  user?.avatar &&
                  `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                }
                sx={{
                  width: 50,
                  height: 50,
                  fontSize: 50,
                  objectFit: "contain",
                }}
              />
              <div className="flex px-3 items-start flex-wrap">
                <div className="flex items-center w-full space-x-2">
                  <Typography variant="h6">{user?.name}</Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    @username
                  </Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    &#x2022; 40 min
                  </Typography>
                </div>
                <Typography variant="body1">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Aliquam mattis, ante vel pretium vulputate, ligula ipsum
                  eleifend augue, vel sagittis eros risus a felis. Morbi pretium
                  tincidunt lacinia.
                </Typography>
              </div>
              <div className="flex flex-col">
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <FavoriteBorderIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    99
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <ChatBubbleOutlineIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    170
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <MoreHorizIcon fontSize="medium" />
                </IconButton>
              </div>
            </ListItem>
            <ListItem className="flex px-2 py-3 mb-3 items-start -translate-x-[2.3rem] bg-white border-2 border-primary rounded-3xl">
              <Avatar
                className="object-contain border border-orange-400"
                alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                src={
                  user?.avatar &&
                  `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                }
                sx={{
                  width: 50,
                  height: 50,
                  fontSize: 50,
                  objectFit: "contain",
                }}
              />
              <div className="flex px-3 items-start flex-wrap">
                <div className="flex items-center w-full space-x-2">
                  <Typography variant="h6">{user?.name}</Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    @username
                  </Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    &#x2022; 40 min
                  </Typography>
                </div>
                <Typography variant="body1">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Aliquam mattis, ante vel pretium vulputate, ligula ipsum
                  eleifend augue, vel sagittis eros risus a felis. Morbi pretium
                  tincidunt lacinia.
                </Typography>
              </div>
              <div className="flex flex-col">
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <FavoriteBorderIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    99
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <ChatBubbleOutlineIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    170
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <MoreHorizIcon fontSize="medium" />
                </IconButton>
              </div>
            </ListItem>
            <ListItem className="flex px-2 py-3 mb-3 items-start -translate-x-[2.3rem] bg-white border-2 border-primary rounded-3xl">
              <Avatar
                className="object-contain border border-orange-400"
                alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                src={
                  user?.avatar &&
                  `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                }
                sx={{
                  width: 50,
                  height: 50,
                  fontSize: 50,
                  objectFit: "contain",
                }}
              />
              <div className="flex px-3 items-start flex-wrap">
                <div className="flex items-center w-full space-x-2">
                  <Typography variant="h6">{user?.name}</Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    @username
                  </Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    &#x2022; 40 min
                  </Typography>
                </div>
                <div className="flex w-full h-80 my-3 relative rounded-3xl">
                  <Image
                    className="object-contain"
                    src="/dog.png"
                    alt="Drawing of a french bulldog sitting looking back at you"
                    fill
                    priority
                  />
                </div>
                <Typography variant="body1">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Aliquam mattis, ante vel pretium vulputate, ligula ipsum
                  eleifend augue, vel sagittis eros risus a felis. Morbi pretium
                  tincidunt lacinia.
                </Typography>
              </div>
              <div className="flex flex-col">
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <FavoriteBorderIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    99
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <ChatBubbleOutlineIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    170
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <MoreHorizIcon fontSize="medium" />
                </IconButton>
              </div>
            </ListItem>
            <ListItem className="flex px-2 py-3 mb-3 items-start -translate-x-[2.3rem] bg-white border-2 border-primary rounded-3xl">
              <Avatar
                className="object-contain border border-orange-400"
                alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                src={
                  user?.avatar &&
                  `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                }
                sx={{
                  width: 50,
                  height: 50,
                  fontSize: 50,
                  objectFit: "contain",
                }}
              />
              <div className="flex px-3 items-start flex-wrap">
                <div className="flex items-center w-full space-x-2">
                  <Typography variant="h6">{user?.name}</Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    @username
                  </Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    &#x2022; 40 min
                  </Typography>
                </div>
                <Typography variant="body1">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Aliquam mattis, ante vel pretium vulputate, ligula ipsum
                  eleifend augue, vel sagittis eros risus a felis. Morbi pretium
                  tincidunt lacinia.
                </Typography>
              </div>
              <div className="flex flex-col">
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <FavoriteBorderIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    99
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <ChatBubbleOutlineIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    170
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <MoreHorizIcon fontSize="medium" />
                </IconButton>
              </div>
            </ListItem>
            <ListItem className="flex px-2 py-3 mb-3 items-start -translate-x-[2.3rem] bg-white border-2 border-primary rounded-3xl">
              <Avatar
                className="object-contain border border-orange-400"
                alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                src={
                  user?.avatar &&
                  `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                }
                sx={{
                  width: 50,
                  height: 50,
                  fontSize: 50,
                  objectFit: "contain",
                }}
              />
              <div className="flex px-3 items-start flex-wrap">
                <div className="flex items-center w-full space-x-2">
                  <Typography variant="h6">{user?.name}</Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    @username
                  </Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    &#x2022; 40 min
                  </Typography>
                </div>
                <Typography variant="body1">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Aliquam mattis, ante vel pretium vulputate, ligula ipsum
                  eleifend augue, vel sagittis eros risus a felis. Morbi pretium
                  tincidunt lacinia.
                </Typography>
              </div>
              <div className="flex flex-col">
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <FavoriteBorderIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    99
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <ChatBubbleOutlineIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    170
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <MoreHorizIcon fontSize="medium" />
                </IconButton>
              </div>
            </ListItem>
            <ListItem className="flex px-2 py-3 mb-3 items-start -translate-x-[2.3rem] bg-white border-2 border-primary rounded-3xl">
              <Avatar
                className="object-contain border border-orange-400"
                alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                src={
                  user?.avatar &&
                  `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                }
                sx={{
                  width: 50,
                  height: 50,
                  fontSize: 50,
                  objectFit: "contain",
                }}
              />
              <div className="flex px-3 items-start flex-wrap">
                <div className="flex items-center w-full space-x-2">
                  <Typography variant="h6">{user?.name}</Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    @username
                  </Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    &#x2022; 40 min
                  </Typography>
                </div>
                <Typography variant="body1">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Aliquam mattis, ante vel pretium vulputate, ligula ipsum
                  eleifend augue, vel sagittis eros risus a felis. Morbi pretium
                  tincidunt lacinia.
                </Typography>
              </div>
              <div className="flex flex-col">
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <FavoriteBorderIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    99
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <ChatBubbleOutlineIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    170
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <MoreHorizIcon fontSize="medium" />
                </IconButton>
              </div>
            </ListItem>
            <ListItem className="flex px-2 py-3 mb-3 items-start -translate-x-[2.3rem] bg-white border-2 border-primary rounded-3xl">
              <Avatar
                className="object-contain border border-orange-400"
                alt={user?.name ? `${user.name}'s avatar` : "User avatar"}
                src={
                  user?.avatar &&
                  `${process.env.NEXT_PUBLIC_SERVER_ADDRESS}/${user?.avatar}`
                }
                sx={{
                  width: 50,
                  height: 50,
                  fontSize: 50,
                  objectFit: "contain",
                }}
              />
              <div className="flex px-3 items-start flex-wrap">
                <div className="flex items-center w-full space-x-2">
                  <Typography variant="h6">{user?.name}</Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    @username
                  </Typography>
                  <Typography variant="body1" className="text-gray-500 text-sm">
                    &#x2022; 40 min
                  </Typography>
                </div>
                <Typography variant="body1">
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  Aliquam mattis, ante vel pretium vulputate, ligula ipsum
                  eleifend augue, vel sagittis eros risus a felis. Morbi pretium
                  tincidunt lacinia.
                </Typography>
              </div>
              <div className="flex flex-col">
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <FavoriteBorderIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    99
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <ChatBubbleOutlineIcon fontSize="medium" />
                  <Typography variant="body1" className="text-gray-400 ml-1">
                    170
                  </Typography>
                </IconButton>
                <IconButton
                  color="primary"
                  aria-label="Add a pet"
                  component="label"
                  onClick={() => ""}
                  className="flex justify-start"
                >
                  <MoreHorizIcon fontSize="medium" />
                </IconButton>
              </div>
            </ListItem>
          </List>
        </div>
      </main>
    </>
  );
}
